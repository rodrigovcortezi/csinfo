name: Build and Deploy (Cache)

on:
  push:
    branches: main

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to the GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image (api)
        uses: docker/build-push-action@v2
        with:
          context: ./api
          push: true
          tags: ghcr.io/rodrigovcortezi/csinfo-api
          cache-from: type=local,src=/tmp/.buildx-cache/api
          cache-to: type=local,dest=/tmp/.buildx-cache-new/api
      - name: Build and push image (retriever)
        uses: docker/build-push-action@v2
        with:
          context: ./retriever
          push: true
          tags: ghcr.io/rodrigovcortezi/csinfo-retriever
          cache-from: type=local,src=/tmp/.buildx-cache/retriever
          cache-to: type=local,dest=/tmp/.buildx-cache-new/retriever
      - name: Build and push image (bot)
        uses: docker/build-push-action@v2
        with:
          context: ./bot
          push: true
          tags: ghcr.io/rodrigovcortezi/csinfo-bot
          cache-from: type=local,src=/tmp/.buildx-cache/bot
          cache-to: type=local,dest=/tmp/.buildx-cache-new/bot
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    steps:
      - name: Pull image and restart
        uses: appleboy/ssh-action@master
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USER: ${{ github.actor }}
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: TOKEN,USER
          script: |
            cd /home/ec2-user/csinfo
            git fetch --all
            git reset --hard origin/main
            git pull origin main
            docker-compose stop
            docker system prune -f
            echo $TOKEN | docker login ghcr.io -u ${USER} --password-stdin
            docker-compose pull
            docker-compose up -d
